{"ast":null,"code":"import { createStore } from \"redux\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0,\n    showCounter: true\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  const stateValue = store.getState();\n  console.log(stateValue);\n};\n\nexport default store;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/01-starting-project/src/store/index.js"],"names":["createStore","counterReducer","state","counter","showCounter","action","type","amount","store","counterSubscriber","stateValue","getState","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,cAAc,GAAG,YAAwD;AAAA,MAAvDC,KAAuD,uEAA/C;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,WAAW,EAAG;AAA5B,GAA+C;AAAA,MAAXC,MAAW;;AAC7E,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEH,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AAA3B,KAAP;AACD;;AACD,MAAIE,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEH,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AAA3B,KAAP;AACD;;AACD,MAAIE,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLH,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBE,MAAM,CAACE;AAD3B,KAAP;AAGD;;AAED,SAAOL,KAAP;AACD,CAdD;;AAgBA,MAAMM,KAAK,GAAGR,WAAW,CAACC,cAAD,CAAzB;;AAEA,MAAMQ,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,UAAU,GAAGF,KAAK,CAACG,QAAN,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACD,CAHD;;AAKA,eAAeF,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst counterReducer = (state = { counter: 0, showCounter : true }, action) => {\r\n  if (action.type === \"increment\") {\r\n    return { counter: state.counter + 1 };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return { counter: state.counter - 1 };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nconst counterSubscriber = () => {\r\n  const stateValue = store.getState();\r\n  console.log(stateValue);\r\n};\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}