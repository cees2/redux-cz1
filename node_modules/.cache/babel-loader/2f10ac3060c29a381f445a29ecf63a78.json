{"ast":null,"code":"import { createStore } from \"redux\";\nexport const INCREMENT = 'increment';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    state.counter++;\n    return {\n      counter: state.counter,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  const stateValue = store.getState();\n  console.log(stateValue);\n};\n\nexport default store;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/01-starting-project/src/store/index.js"],"names":["createStore","INCREMENT","initialState","counter","showCounter","counterReducer","state","action","type","amount","store","counterSubscriber","stateValue","getState","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AAEP,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;;AAEA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7BF,IAAAA,KAAK,CAACH,OAAN;AACF,WAAO;AAAEA,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAjB;AAA0BC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAA7C,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CAA3B;AAA8BC,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAAjD,KAAP;AACD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACE,MAD3B;AAELL,MAAAA,WAAW,EAAEE,KAAK,CAACF;AAFd,KAAP;AAID;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAM;AACFL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OADb;AAEFC,MAAAA,WAAW,EAAE,CAACE,KAAK,CAACF;AAFlB,KAAN;AAIH;;AAED,SAAOE,KAAP;AACD,CAvBD;;AAyBA,MAAMI,KAAK,GAAGV,WAAW,CAACK,cAAD,CAAzB;;AAEA,MAAMM,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,UAAU,GAAGF,KAAK,CAACG,QAAN,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACD,CAHD;;AAKA,eAAeF,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nexport const INCREMENT = 'increment';\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n      state.counter++;\r\n    return { counter: state.counter, showCounter: state.showCounter };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return { counter: state.counter - 1, showCounter: state.showCounter };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if(action.type === 'toggle'){\r\n      return{\r\n          counter: state.counter,\r\n          showCounter: !state.showCounter\r\n      }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nconst counterSubscriber = () => {\r\n  const stateValue = store.getState();\r\n  console.log(stateValue);\r\n};\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}