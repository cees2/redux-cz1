{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/01-starting-project/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE,IAA3B;AAAiCC,EAAAA,eAAe,EAAG;AAAnD,CAA5B;AAEA,MAAMC,YAAY,GAAGN,WAAW,CAAC;AAC/BO,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEN,mBAFiB;AAG/BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACdA,MAAAA,KAAK,CAACR,OAAN;AACD,KAHO;;AAIRS,IAAAA,SAAS,CAACD,KAAD,EAAO;AACdA,MAAAA,KAAK,CAACR,OAAN;AACD,KANO;;AAORU,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;AACrBH,MAAAA,KAAK,CAACR,OAAN,GAAgBQ,KAAK,CAACR,OAAN,GAAgBW,MAAM,CAACC,OAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAO;AAClBA,MAAAA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAoBA,MAAMa,KAAK,GAAGhB,cAAc,CAAC;AAC3BiB,EAAAA,OAAO,EAAEZ,YAAY,CAACY;AADK,CAAD,CAA5B;AAIA,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAApC;AACP,eAAeH,KAAf","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true, isAuthenticated : false };\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state){\r\n      state.counter++;\r\n    },\r\n    decrement(state){\r\n      state.counter--\r\n    },\r\n    increase(state, action){\r\n      state.counter = state.counter + action.payload\r\n    },\r\n    toggleCounter(state){\r\n      state.showCounter = !state.showCounter\r\n    }\r\n\r\n  }\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}