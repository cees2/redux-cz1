{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nconst counterSubscriber = () => {\n  const stateValue = store.getState();\n  console.log(stateValue);\n};\n\nexport default store;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store","counterSubscriber","stateValue","getState","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAAY,EAAEA,YAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACdA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,SAAS,CAACD,KAAD,EAAO;AACdA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAe;AACrBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAAvC;AACD,KATO;;AAURC,IAAAA,aAAa,CAACL,KAAD,EAAO;AAClBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;;AAmBA,MAAMW,cAAc,GAAG,YAAkC;AAAA,MAAjCN,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXU,MAAW;;AACvD,MAAIA,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAjB;AAA0BC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAA7C,KAAP;AACD;;AACD,MAAIQ,MAAM,CAACI,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AAAEb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,CAA3B;AAA8BC,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAAjD,KAAP;AACD;;AACD,MAAIQ,MAAM,CAACI,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,MAD3B;AAELT,MAAAA,WAAW,EAAEK,KAAK,CAACL;AAFd,KAAP;AAID;;AAED,MAAGQ,MAAM,CAACI,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAM;AACFb,MAAAA,OAAO,EAAEM,KAAK,CAACN,OADb;AAEFC,MAAAA,WAAW,EAAE,CAACK,KAAK,CAACL;AAFlB,KAAN;AAIH;;AAED,SAAOK,KAAP;AACD,CAtBD;;AAwBA,MAAMQ,KAAK,GAAGjB,WAAW,CAACe,cAAD,CAAzB;;AAEA,MAAMG,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,UAAU,GAAGF,KAAK,CAACG,QAAN,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACD,CAHD;;AAKA,eAAeF,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialState,\r\n  reducers: {\r\n    increment(state){\r\n      state.counter++\r\n    },\r\n    decrement(state){\r\n      state.counter--\r\n    },\r\n    increase(state, action){\r\n      state.counter = state.counter + action.amount\r\n    },\r\n    toggleCounter(state){\r\n      state.showCounter = !state.showCounter\r\n    }\r\n  }\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return { counter: state.counter, showCounter: state.showCounter };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return { counter: state.counter - 1, showCounter: state.showCounter };\r\n  }\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if(action.type === 'toggle'){\r\n      return{\r\n          counter: state.counter,\r\n          showCounter: !state.showCounter\r\n      }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nconst counterSubscriber = () => {\r\n  const stateValue = store.getState();\r\n  console.log(stateValue);\r\n};\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}